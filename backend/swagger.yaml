swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json

paths:
  /user/login:
    post:
      tags: [User Module]
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /user/signup:
    post:
      tags: [User Module]
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /user/profile:
    get:
      security:
        - Bearer: []
      tags: [User Module]
      summary: User Profile API
      description: API for fetching a user profile
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags: [User Module]
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      responses:
        '200':
          description: User profile updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  # ===== Transactions =====
  /user/{accountId}/transactions:
    get:
      security:
        - Bearer: []
      tags: [Transaction Module]
      summary: Obtenir toutes les transactions d‚Äôun compte
      parameters:
        - name: accountId
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: Liste des transactions
          schema:
            type: array
            items:
              $ref: '#/definitions/Transaction'
        '401':
          description: Unauthorized

  /user/transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags: [Transaction Module]
      summary: D√©tails d‚Äôune transaction
      parameters:
        - name: transactionId
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: D√©tails de la transaction
          schema:
            $ref: '#/definitions/Transaction'
        '401':
          description: Unauthorized
        '404':
          description: Not Found

  /user/transactions/{transactionId}/note:
    post:
      security:
        - Bearer: []
      tags: [Transaction Module]
      summary: Ajouter une note
      parameters:
        - name: transactionId
          in: path
          required: true
          type: integer
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/NotePayload'
      responses:
        '200':
          description: Note ajout√©e
          schema:
            $ref: '#/definitions/Transaction'
    put:
      security:
        - Bearer: []
      tags: [Transaction Module]
      summary: Modifier une note
      parameters:
        - name: transactionId
          in: path
          required: true
          type: integer
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/NotePayload'
      responses:
        '200':
          description: Note modifi√©e
          schema:
            $ref: '#/definitions/Transaction'
    delete:
      security:
        - Bearer: []
      tags: [Transaction Module]
      summary: Supprimer une note
      parameters:
        - name: transactionId
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: Note supprim√©e
          schema:
            $ref: '#/definitions/Transaction'

  /user/transactions/{transactionId}/type:
    post:
      security:
        - Bearer: []
      tags: [Transaction Module]
      summary: Ajouter un type (non utilis√©e)
      parameters:
        - name: transactionId
          in: path
          required: true
          type: integer
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/TypePayload'
      responses:
        '200':
          description: Type ajout√©
    put:
      security:
        - Bearer: []
      tags: [Transaction Module]
      summary: Modifier un type (non utilis√©e)
      parameters:
        - name: transactionId
          in: path
          required: true
          type: integer
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/TypePayload'
      responses:
        '200':
          description: Type modifi√©
    delete:
      security:
        - Bearer: []
      tags: [Transaction Module]
      summary: Supprimer un type (non utilis√©e)
      parameters:
        - name: transactionId
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: Type supprim√©

  /user/transactions/{transactionId}/category:
    post:
      security:
        - Bearer: []
      tags: [Transaction Module]
      summary: Ajouter une cat√©gorie
      parameters:
        - name: transactionId
          in: path
          required: true
          type: integer
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CategoryPayload'
      responses:
        '200':
          description: Cat√©gorie ajout√©e
          schema:
            $ref: '#/definitions/Transaction'
    put:
      security:
        - Bearer: []
      tags: [Transaction Module]
      summary: Modifier une cat√©gorie
      parameters:
        - name: transactionId
          in: path
          required: true
          type: integer
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CategoryPayload'
      responses:
        '200':
          description: Cat√©gorie modifi√©e
          schema:
            $ref: '#/definitions/Transaction'
    delete:
      security:
        - Bearer: []
      tags: [Transaction Module]
      summary: Supprimer une cat√©gorie
      parameters:
        - name: transactionId
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: Cat√©gorie supprim√©e
          schema:
            $ref: '#/definitions/Transaction'

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name

  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password

  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string

  LoginResponse:
    type: object
    properties:
      token:
        type: string

  UserProfile:
    type: object
    properties:
      userName:
        type: string

  Transaction:
    type: object
    properties:
      id: { type: integer }
      accountId: { type: integer }
      date: { type: string }
      description: { type: string }
      type: { type: string }
      amount: { type: number, format: float }
      category: { type: string }
      note: { type: string }

  # üëâ Exemples pour pr√©-remplir le Try it out
  NotePayload:
    type: object
    required: [note]
    properties:
      note:
        type: string
        example: "D√©jeuner avec client"
    example:
      note: "D√©jeuner avec client"

  CategoryPayload:
    type: object
    required: [category]
    properties:
      category:
        type: string
        example: "Food"
    example:
      category: "Food"

  TypePayload:
    type: object
    required: [type]
    properties:
      type:
        type: string
        example: "credit"
    example:
      type: "credit"
